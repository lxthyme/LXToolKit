//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let entitlements = entitlements()

  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 2 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }
    var localizabled: localizabled { .init(source: .init(bundle: bundle, tableName: "Localizabled", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }
    func localizabled(preferredLanguages: [String]) -> localizabled {
      .init(source: .init(bundle: bundle, tableName: "Localizabled", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 0 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source
    }

    /// This `_R.string.localizabled` struct is generated, and contains static references to 51 localization keys.
    struct localizabled {
      let source: RswiftResources.StringResource.Source

      /// en translation: Back
      ///
      /// Key: Common.Back
      ///
      /// Locales: en, zh-Hans
      var commonBack: RswiftResources.StringResource { .init(key: "Common.Back", tableName: "Localizabled", source: source, developmentValue: "Back", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: Common.Cancel
      ///
      /// Locales: en, zh-Hans
      var commonCancel: RswiftResources.StringResource { .init(key: "Common.Cancel", tableName: "Localizabled", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Close
      ///
      /// Key: Common.Close
      ///
      /// Locales: en, zh-Hans
      var commonClose: RswiftResources.StringResource { .init(key: "Common.Close", tableName: "Localizabled", source: source, developmentValue: "Close", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: Common.Delete
      ///
      /// Locales: en, zh-Hans
      var commonDelete: RswiftResources.StringResource { .init(key: "Common.Delete", tableName: "Localizabled", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Done
      ///
      /// Key: Common.Done
      ///
      /// Locales: en, zh-Hans
      var commonDone: RswiftResources.StringResource { .init(key: "Common.Done", tableName: "Localizabled", source: source, developmentValue: "Done", comment: nil) }

      /// en translation: Edit
      ///
      /// Key: Common.Edit
      ///
      /// Locales: en, zh-Hans
      var commonEdit: RswiftResources.StringResource { .init(key: "Common.Edit", tableName: "Localizabled", source: source, developmentValue: "Edit", comment: nil) }

      /// en translation: Error
      ///
      /// Key: Common.Error
      ///
      /// Locales: en, zh-Hans
      var commonError: RswiftResources.StringResource { .init(key: "Common.Error", tableName: "Localizabled", source: source, developmentValue: "Error", comment: nil) }

      /// en translation: Next
      ///
      /// Key: Common.Next
      ///
      /// Locales: en, zh-Hans
      var commonNext: RswiftResources.StringResource { .init(key: "Common.Next", tableName: "Localizabled", source: source, developmentValue: "Next", comment: nil) }

      /// en translation: No
      ///
      /// Key: Common.No
      ///
      /// Locales: en, zh-Hans
      var commonNo: RswiftResources.StringResource { .init(key: "Common.No", tableName: "Localizabled", source: source, developmentValue: "No", comment: nil) }

      /// en translation: No Results
      ///
      /// Key: Common.NoResults
      ///
      /// Locales: en, zh-Hans
      var commonNoResults: RswiftResources.StringResource { .init(key: "Common.NoResults", tableName: "Localizabled", source: source, developmentValue: "No Results", comment: nil) }

      /// en translation: OK
      ///
      /// Key: Common.OK
      ///
      /// Locales: en, zh-Hans
      var commonOK: RswiftResources.StringResource { .init(key: "Common.OK", tableName: "Localizabled", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Reset
      ///
      /// Key: Common.Reset
      ///
      /// Locales: en, zh-Hans
      var commonReset: RswiftResources.StringResource { .init(key: "Common.Reset", tableName: "Localizabled", source: source, developmentValue: "Reset", comment: nil) }

      /// en translation: Save
      ///
      /// Key: Common.Save
      ///
      /// Locales: en, zh-Hans
      var commonSave: RswiftResources.StringResource { .init(key: "Common.Save", tableName: "Localizabled", source: source, developmentValue: "Save", comment: nil) }

      /// en translation: Search
      ///
      /// Key: Common.Search
      ///
      /// Locales: en, zh-Hans
      var commonSearch: RswiftResources.StringResource { .init(key: "Common.Search", tableName: "Localizabled", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Skip
      ///
      /// Key: Common.Skip
      ///
      /// Locales: en, zh-Hans
      var commonSkip: RswiftResources.StringResource { .init(key: "Common.Skip", tableName: "Localizabled", source: source, developmentValue: "Skip", comment: nil) }

      /// en translation: Success
      ///
      /// Key: Common.Success
      ///
      /// Locales: en, zh-Hans
      var commonSuccess: RswiftResources.StringResource { .init(key: "Common.Success", tableName: "Localizabled", source: source, developmentValue: "Success", comment: nil) }

      /// en translation: Yes
      ///
      /// Key: Common.Yes
      ///
      /// Locales: en, zh-Hans
      var commonYes: RswiftResources.StringResource { .init(key: "Common.Yes", tableName: "Localizabled", source: source, developmentValue: "Yes", comment: nil) }

      /// en translation: Events
      ///
      /// Key: Events.Navigation.Title
      ///
      /// Locales: en, zh-Hans
      var eventsNavigationTitle: RswiftResources.StringResource { .init(key: "Events.Navigation.Title", tableName: "Localizabled", source: source, developmentValue: "Events", comment: nil) }

      /// en translation: Performed
      ///
      /// Key: Events.PerformedSegment.Title
      ///
      /// Locales: en, zh-Hans
      var eventsPerformedSegmentTitle: RswiftResources.StringResource { .init(key: "Events.PerformedSegment.Title", tableName: "Localizabled", source: source, developmentValue: "Performed", comment: nil) }

      /// en translation: Received
      ///
      /// Key: Events.ReceivedSegment.Title
      ///
      /// Locales: en, zh-Hans
      var eventsReceivedSegmentTitle: RswiftResources.StringResource { .init(key: "Events.ReceivedSegment.Title", tableName: "Localizabled", source: source, developmentValue: "Received", comment: nil) }

      /// en translation: All
      ///
      /// Key: Languages.AllSection.Title
      ///
      /// Locales: en, zh-Hans
      var languagesAllSectionTitle: RswiftResources.StringResource { .init(key: "Languages.AllSection.Title", tableName: "Localizabled", source: source, developmentValue: "All", comment: nil) }

      /// en translation: Languages
      ///
      /// Key: Languages.Navigation.Title
      ///
      /// Locales: en, zh-Hans
      var languagesNavigationTitle: RswiftResources.StringResource { .init(key: "Languages.Navigation.Title", tableName: "Localizabled", source: source, developmentValue: "Languages", comment: nil) }

      /// en translation: Popular
      ///
      /// Key: Languages.PopularSection.Title
      ///
      /// Locales: en, zh-Hans
      var languagesPopularSectionTitle: RswiftResources.StringResource { .init(key: "Languages.PopularSection.Title", tableName: "Localizabled", source: source, developmentValue: "Popular", comment: nil) }

      /// en translation: All Languages
      ///
      /// Key: Languages.allButton.Title
      ///
      /// Locales: en, zh-Hans
      var languagesAllButtonTitle: RswiftResources.StringResource { .init(key: "Languages.allButton.Title", tableName: "Localizabled", source: source, developmentValue: "All Languages", comment: nil) }

      /// en translation: Login
      ///
      /// Key: Login.BasicLoginButton.Title
      ///
      /// Locales: en, zh-Hans
      var loginBasicLoginButtonTitle: RswiftResources.StringResource { .init(key: "Login.BasicLoginButton.Title", tableName: "Localizabled", source: source, developmentValue: "Login", comment: nil) }

      /// en translation: Basic
      ///
      /// Key: Login.BasicSegment.Title
      ///
      /// Locales: en, zh-Hans
      var loginBasicSegmentTitle: RswiftResources.StringResource { .init(key: "Login.BasicSegment.Title", tableName: "Localizabled", source: source, developmentValue: "Basic", comment: nil) }

      /// en translation: For API requests using Basic Authentication or OAuth, you can make up to 5000 requests per hour.   For unauthenticated requests, the rate limit allows for up to 60 requests per hour.
      ///
      /// Key: Login.DetailLabel.Text
      ///
      /// Locales: en, zh-Hans
      var loginDetailLabelText: RswiftResources.StringResource { .init(key: "Login.DetailLabel.Text", tableName: "Localizabled", source: source, developmentValue: "For API requests using Basic Authentication or OAuth, you can make up to 5000 requests per hour. \n\nFor unauthenticated requests, the rate limit allows for up to 60 requests per hour.", comment: nil) }

      /// en translation: Please check your login or password
      ///
      /// Key: Login.LoginFailed.Description
      ///
      /// Locales: en, zh-Hans
      var loginLoginFailedDescription: RswiftResources.StringResource { .init(key: "Login.LoginFailed.Description", tableName: "Localizabled", source: source, developmentValue: "Please check your login or password", comment: nil) }

      /// en translation: login
      ///
      /// Key: Login.LoginTextField.Placeholder
      ///
      /// Locales: en, zh-Hans
      var loginLoginTextFieldPlaceholder: RswiftResources.StringResource { .init(key: "Login.LoginTextField.Placeholder", tableName: "Localizabled", source: source, developmentValue: "login", comment: nil) }

      /// en translation: OAuth
      ///
      /// Key: Login.OAuthSegment.Title
      ///
      /// Locales: en, zh-Hans
      var loginOAuthSegmentTitle: RswiftResources.StringResource { .init(key: "Login.OAuthSegment.Title", tableName: "Localizabled", source: source, developmentValue: "OAuth", comment: nil) }

      /// en translation: Sign in with Github
      ///
      /// Key: Login.OAuthloginButton.Title
      ///
      /// Locales: en, zh-Hans
      var loginOAuthloginButtonTitle: RswiftResources.StringResource { .init(key: "Login.OAuthloginButton.Title", tableName: "Localizabled", source: source, developmentValue: "Sign in with Github", comment: nil) }

      /// en translation: password
      ///
      /// Key: Login.PasswordTextField.Placeholder
      ///
      /// Locales: en, zh-Hans
      var loginPasswordTextFieldPlaceholder: RswiftResources.StringResource { .init(key: "Login.PasswordTextField.Placeholder", tableName: "Localizabled", source: source, developmentValue: "password", comment: nil) }

      /// en translation: These permissions are required %@
      ///
      /// Key: Login.PersonalDetailLabel.Text
      ///
      /// Locales: en, zh-Hans
      var loginPersonalDetailLabelText: RswiftResources.StringResource1<String> { .init(key: "Login.PersonalDetailLabel.Text", tableName: "Localizabled", source: source, developmentValue: "These permissions are required\n%@", comment: nil) }

      /// en translation: Login
      ///
      /// Key: Login.PersonalLoginButton.Title
      ///
      /// Locales: en, zh-Hans
      var loginPersonalLoginButtonTitle: RswiftResources.StringResource { .init(key: "Login.PersonalLoginButton.Title", tableName: "Localizabled", source: source, developmentValue: "Login", comment: nil) }

      /// en translation: Personal
      ///
      /// Key: Login.PersonalSegment.Title
      ///
      /// Locales: en, zh-Hans
      var loginPersonalSegmentTitle: RswiftResources.StringResource { .init(key: "Login.PersonalSegment.Title", tableName: "Localizabled", source: source, developmentValue: "Personal", comment: nil) }

      /// en translation: Personal Access Token
      ///
      /// Key: Login.PersonalTitleLabel.Text
      ///
      /// Locales: en, zh-Hans
      var loginPersonalTitleLabelText: RswiftResources.StringResource { .init(key: "Login.PersonalTitleLabel.Text", tableName: "Localizabled", source: source, developmentValue: "Personal Access Token", comment: nil) }

      /// en translation: personal access token
      ///
      /// Key: Login.PersonalTokenTextField.Placeholder
      ///
      /// Locales: en, zh-Hans
      var loginPersonalTokenTextFieldPlaceholder: RswiftResources.StringResource { .init(key: "Login.PersonalTokenTextField.Placeholder", tableName: "Localizabled", source: source, developmentValue: "personal access token", comment: nil) }

      /// en translation: Welcome to SwiftHub
      ///
      /// Key: Login.TitleLabel.Text
      ///
      /// Locales: en, zh-Hans
      var loginTitleLabelText: RswiftResources.StringResource { .init(key: "Login.TitleLabel.Text", tableName: "Localizabled", source: source, developmentValue: "Welcome to SwiftHub", comment: nil) }

      /// en translation: Back online
      ///
      /// Key: Toast.ConnectionBack.Message
      ///
      /// Locales: en, zh-Hans
      var toastConnectionBackMessage: RswiftResources.StringResource { .init(key: "Toast.ConnectionBack.Message", tableName: "Localizabled", source: source, developmentValue: "Back online", comment: nil) }

      /// en translation: No connection
      ///
      /// Key: Toast.ConnectionLost.Message
      ///
      /// Locales: en, zh-Hans
      var toastConnectionLostMessage: RswiftResources.StringResource { .init(key: "Toast.ConnectionLost.Message", tableName: "Localizabled", source: source, developmentValue: "No connection", comment: nil) }

      /// en translation: Continue
      ///
      /// Key: WhatsNew.CompletionButton.Title
      ///
      /// Locales: en, zh-Hans
      var whatsNewCompletionButtonTitle: RswiftResources.StringResource { .init(key: "WhatsNew.CompletionButton.Title", tableName: "Localizabled", source: source, developmentValue: "Continue", comment: nil) }

      /// en translation: View on GitHub
      ///
      /// Key: WhatsNew.DetailButton.Title
      ///
      /// Locales: en, zh-Hans
      var whatsNewDetailButtonTitle: RswiftResources.StringResource { .init(key: "WhatsNew.DetailButton.Title", tableName: "Localizabled", source: source, developmentValue: "View on GitHub", comment: nil) }

      /// en translation: Tool for counting lines of code from repositories
      ///
      /// Key: WhatsNew.Item1.Subtitle
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem1Subtitle: RswiftResources.StringResource { .init(key: "WhatsNew.Item1.Subtitle", tableName: "Localizabled", source: source, developmentValue: "Tool for counting lines of code from repositories", comment: nil) }

      /// en translation: Count Lines of Code
      ///
      /// Key: WhatsNew.Item1.Title
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem1Title: RswiftResources.StringResource { .init(key: "WhatsNew.Item1.Title", tableName: "Localizabled", source: source, developmentValue: "Count Lines of Code", comment: nil) }

      /// en translation: You can apply different themes with Light and Dark modes
      ///
      /// Key: WhatsNew.Item2.Subtitle
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem2Subtitle: RswiftResources.StringResource { .init(key: "WhatsNew.Item2.Subtitle", tableName: "Localizabled", source: source, developmentValue: "You can apply different themes with Light and Dark modes", comment: nil) }

      /// en translation: Themes
      ///
      /// Key: WhatsNew.Item2.Title
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem2Title: RswiftResources.StringResource { .init(key: "WhatsNew.Item2.Title", tableName: "Localizabled", source: source, developmentValue: "Themes", comment: nil) }

      /// en translation: SwiftHub is open source Stars are welcome ★
      ///
      /// Key: WhatsNew.Item3.Subtitle
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem3Subtitle: RswiftResources.StringResource { .init(key: "WhatsNew.Item3.Subtitle", tableName: "Localizabled", source: source, developmentValue: "SwiftHub is open source\nStars are welcome ★", comment: nil) }

      /// en translation: Open Source
      ///
      /// Key: WhatsNew.Item3.Title
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem3Title: RswiftResources.StringResource { .init(key: "WhatsNew.Item3.Title", tableName: "Localizabled", source: source, developmentValue: "Open Source", comment: nil) }

      /// en translation: See what the GitHub community is most excited about today
      ///
      /// Key: WhatsNew.Item4.Subtitle
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem4Subtitle: RswiftResources.StringResource { .init(key: "WhatsNew.Item4.Subtitle", tableName: "Localizabled", source: source, developmentValue: "See what the GitHub community is most excited about today", comment: nil) }

      /// en translation: Trending
      ///
      /// Key: WhatsNew.Item4.Title
      ///
      /// Locales: en, zh-Hans
      var whatsNewItem4Title: RswiftResources.StringResource { .init(key: "WhatsNew.Item4.Title", tableName: "Localizabled", source: source, developmentValue: "Trending", comment: nil) }

      /// en translation: Whats New
      ///
      /// Key: WhatsNew.Title
      ///
      /// Locales: en, zh-Hans
      var whatsNewTitle: RswiftResources.StringResource { .init(key: "WhatsNew.Title", tableName: "Localizabled", source: source, developmentValue: "Whats New", comment: nil) }
    }
  }

  /// This `_R.image` struct is generated, and contains static references to 127 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `egsong_video`.
    var egsong_video: RswiftResources.ImageResource { .init(name: "egsong_video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `empty_placeholde_happy_image`.
    var empty_placeholde_happy_image: RswiftResources.ImageResource { .init(name: "empty_placeholde_happy_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `empty_placeholde_image`.
    var empty_placeholde_image: RswiftResources.ImageResource { .init(name: "empty_placeholde_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_button_github`.
    var icon_button_github: RswiftResources.ImageResource { .init(name: "icon_button_github", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_button_star`.
    var icon_button_star: RswiftResources.ImageResource { .init(name: "icon_button_star", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_button_unstar`.
    var icon_button_unstar: RswiftResources.ImageResource { .init(name: "icon_button_unstar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_button_user_plus`.
    var icon_button_user_plus: RswiftResources.ImageResource { .init(name: "icon_button_user_plus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_button_user_x`.
    var icon_button_user_x: RswiftResources.ImageResource { .init(name: "icon_button_user_x", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_acknowledgements`.
    var icon_cell_acknowledgements: RswiftResources.ImageResource { .init(name: "icon_cell_acknowledgements", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_branch`.
    var icon_cell_badge_branch: RswiftResources.ImageResource { .init(name: "icon_cell_badge_branch", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_collaborator`.
    var icon_cell_badge_collaborator: RswiftResources.ImageResource { .init(name: "icon_cell_badge_collaborator", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_comment`.
    var icon_cell_badge_comment: RswiftResources.ImageResource { .init(name: "icon_cell_badge_comment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_commit`.
    var icon_cell_badge_commit: RswiftResources.ImageResource { .init(name: "icon_cell_badge_commit", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_fork`.
    var icon_cell_badge_fork: RswiftResources.ImageResource { .init(name: "icon_cell_badge_fork", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_issue`.
    var icon_cell_badge_issue: RswiftResources.ImageResource { .init(name: "icon_cell_badge_issue", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_pull_request`.
    var icon_cell_badge_pull_request: RswiftResources.ImageResource { .init(name: "icon_cell_badge_pull_request", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_push`.
    var icon_cell_badge_push: RswiftResources.ImageResource { .init(name: "icon_cell_badge_push", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_repository`.
    var icon_cell_badge_repository: RswiftResources.ImageResource { .init(name: "icon_cell_badge_repository", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_search`.
    var icon_cell_badge_search: RswiftResources.ImageResource { .init(name: "icon_cell_badge_search", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_star`.
    var icon_cell_badge_star: RswiftResources.ImageResource { .init(name: "icon_cell_badge_star", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_tag`.
    var icon_cell_badge_tag: RswiftResources.ImageResource { .init(name: "icon_cell_badge_tag", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_trending`.
    var icon_cell_badge_trending: RswiftResources.ImageResource { .init(name: "icon_cell_badge_trending", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_badge_user`.
    var icon_cell_badge_user: RswiftResources.ImageResource { .init(name: "icon_cell_badge_user", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_check`.
    var icon_cell_check: RswiftResources.ImageResource { .init(name: "icon_cell_check", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_cloc`.
    var icon_cell_cloc: RswiftResources.ImageResource { .init(name: "icon_cell_cloc", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_company`.
    var icon_cell_company: RswiftResources.ImageResource { .init(name: "icon_cell_company", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_contact_no_image`.
    var icon_cell_contact_no_image: RswiftResources.ImageResource { .init(name: "icon_cell_contact_no_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_created`.
    var icon_cell_created: RswiftResources.ImageResource { .init(name: "icon_cell_created", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_dir`.
    var icon_cell_dir: RswiftResources.ImageResource { .init(name: "icon_cell_dir", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_disclosure`.
    var icon_cell_disclosure: RswiftResources.ImageResource { .init(name: "icon_cell_disclosure", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_events`.
    var icon_cell_events: RswiftResources.ImageResource { .init(name: "icon_cell_events", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_file`.
    var icon_cell_file: RswiftResources.ImageResource { .init(name: "icon_cell_file", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_frown`.
    var icon_cell_frown: RswiftResources.ImageResource { .init(name: "icon_cell_frown", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_git_branch`.
    var icon_cell_git_branch: RswiftResources.ImageResource { .init(name: "icon_cell_git_branch", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_git_commit`.
    var icon_cell_git_commit: RswiftResources.ImageResource { .init(name: "icon_cell_git_commit", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_git_fork`.
    var icon_cell_git_fork: RswiftResources.ImageResource { .init(name: "icon_cell_git_fork", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_git_language`.
    var icon_cell_git_language: RswiftResources.ImageResource { .init(name: "icon_cell_git_language", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_git_merge`.
    var icon_cell_git_merge: RswiftResources.ImageResource { .init(name: "icon_cell_git_merge", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_git_pull_request`.
    var icon_cell_git_pull_request: RswiftResources.ImageResource { .init(name: "icon_cell_git_pull_request", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_issues`.
    var icon_cell_issues: RswiftResources.ImageResource { .init(name: "icon_cell_issues", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_language`.
    var icon_cell_language: RswiftResources.ImageResource { .init(name: "icon_cell_language", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_link`.
    var icon_cell_link: RswiftResources.ImageResource { .init(name: "icon_cell_link", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_logout`.
    var icon_cell_logout: RswiftResources.ImageResource { .init(name: "icon_cell_logout", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_night_mode`.
    var icon_cell_night_mode: RswiftResources.ImageResource { .init(name: "icon_cell_night_mode", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_profile_summary`.
    var icon_cell_profile_summary: RswiftResources.ImageResource { .init(name: "icon_cell_profile_summary", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_readme`.
    var icon_cell_readme: RswiftResources.ImageResource { .init(name: "icon_cell_readme", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_releases`.
    var icon_cell_releases: RswiftResources.ImageResource { .init(name: "icon_cell_releases", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_remove`.
    var icon_cell_remove: RswiftResources.ImageResource { .init(name: "icon_cell_remove", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_size`.
    var icon_cell_size: RswiftResources.ImageResource { .init(name: "icon_cell_size", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_smile`.
    var icon_cell_smile: RswiftResources.ImageResource { .init(name: "icon_cell_smile", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_source`.
    var icon_cell_source: RswiftResources.ImageResource { .init(name: "icon_cell_source", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_star`.
    var icon_cell_star: RswiftResources.ImageResource { .init(name: "icon_cell_star", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_stars_history`.
    var icon_cell_stars_history: RswiftResources.ImageResource { .init(name: "icon_cell_stars_history", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_submodule`.
    var icon_cell_submodule: RswiftResources.ImageResource { .init(name: "icon_cell_submodule", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_theme`.
    var icon_cell_theme: RswiftResources.ImageResource { .init(name: "icon_cell_theme", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_updated`.
    var icon_cell_updated: RswiftResources.ImageResource { .init(name: "icon_cell_updated", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_cell_whats_new`.
    var icon_cell_whats_new: RswiftResources.ImageResource { .init(name: "icon_cell_whats_new", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_back`.
    var icon_navigation_back: RswiftResources.ImageResource { .init(name: "icon_navigation_back", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_close`.
    var icon_navigation_close: RswiftResources.ImageResource { .init(name: "icon_navigation_close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_forward`.
    var icon_navigation_forward: RswiftResources.ImageResource { .init(name: "icon_navigation_forward", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_github`.
    var icon_navigation_github: RswiftResources.ImageResource { .init(name: "icon_navigation_github", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_history`.
    var icon_navigation_history: RswiftResources.ImageResource { .init(name: "icon_navigation_history", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_language`.
    var icon_navigation_language: RswiftResources.ImageResource { .init(name: "icon_navigation_language", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_refresh`.
    var icon_navigation_refresh: RswiftResources.ImageResource { .init(name: "icon_navigation_refresh", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_stop`.
    var icon_navigation_stop: RswiftResources.ImageResource { .init(name: "icon_navigation_stop", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_theme`.
    var icon_navigation_theme: RswiftResources.ImageResource { .init(name: "icon_navigation_theme", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_navigation_web`.
    var icon_navigation_web: RswiftResources.ImageResource { .init(name: "icon_navigation_web", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_tabbar_activity`.
    var icon_tabbar_activity: RswiftResources.ImageResource { .init(name: "icon_tabbar_activity", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_tabbar_login`.
    var icon_tabbar_login: RswiftResources.ImageResource { .init(name: "icon_tabbar_login", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_tabbar_news`.
    var icon_tabbar_news: RswiftResources.ImageResource { .init(name: "icon_tabbar_news", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_tabbar_profile`.
    var icon_tabbar_profile: RswiftResources.ImageResource { .init(name: "icon_tabbar_profile", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_tabbar_search`.
    var icon_tabbar_search: RswiftResources.ImageResource { .init(name: "icon_tabbar_search", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_tabbar_settings`.
    var icon_tabbar_settings: RswiftResources.ImageResource { .init(name: "icon_tabbar_settings", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_toast_error`.
    var icon_toast_error: RswiftResources.ImageResource { .init(name: "icon_toast_error", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_toast_success`.
    var icon_toast_success: RswiftResources.ImageResource { .init(name: "icon_toast_success", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_toast_warning`.
    var icon_toast_warning: RswiftResources.ImageResource { .init(name: "icon_toast_warning", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_whatsnew_cloc`.
    var icon_whatsnew_cloc: RswiftResources.ImageResource { .init(name: "icon_whatsnew_cloc", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_whatsnew_github`.
    var icon_whatsnew_github: RswiftResources.ImageResource { .init(name: "icon_whatsnew_github", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_whatsnew_theme`.
    var icon_whatsnew_theme: RswiftResources.ImageResource { .init(name: "icon_whatsnew_theme", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_whatsnew_trending`.
    var icon_whatsnew_trending: RswiftResources.ImageResource { .init(name: "icon_whatsnew_trending", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `image_no_result`.
    var image_no_result: RswiftResources.ImageResource { .init(name: "image_no_result", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `launch_image`.
    var launch_image: RswiftResources.ImageResource { .init(name: "launch_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loading.gif`.
    var loadingGif: RswiftResources.ImageResource { .init(name: "loading.gif", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `new`.
    var new: RswiftResources.ImageResource { .init(name: "new", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `option`.
    var option: RswiftResources.ImageResource { .init(name: "option", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sign_bg`.
    var sign_bg: RswiftResources.ImageResource { .init(name: "sign_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_addPhoto`.
    var zl_addPhoto: RswiftResources.ImageResource { .init(name: "zl_addPhoto", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_albumSelect`.
    var zl_albumSelect: RswiftResources.ImageResource { .init(name: "zl_albumSelect", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_arrow_down`.
    var zl_arrow_down: RswiftResources.ImageResource { .init(name: "zl_arrow_down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_ashbin`.
    var zl_ashbin: RswiftResources.ImageResource { .init(name: "zl_ashbin", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_ashbin_open`.
    var zl_ashbin_open: RswiftResources.ImageResource { .init(name: "zl_ashbin_open", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_btn_circle`.
    var zl_btn_circle: RswiftResources.ImageResource { .init(name: "zl_btn_circle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_btn_original_circle`.
    var zl_btn_original_circle: RswiftResources.ImageResource { .init(name: "zl_btn_original_circle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_btn_original_selected`.
    var zl_btn_original_selected: RswiftResources.ImageResource { .init(name: "zl_btn_original_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_btn_selected`.
    var zl_btn_selected: RswiftResources.ImageResource { .init(name: "zl_btn_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_btn_unselected`.
    var zl_btn_unselected: RswiftResources.ImageResource { .init(name: "zl_btn_unselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_clip`.
    var zl_clip: RswiftResources.ImageResource { .init(name: "zl_clip", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_close`.
    var zl_close: RswiftResources.ImageResource { .init(name: "zl_close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_defaultphoto`.
    var zl_defaultphoto: RswiftResources.ImageResource { .init(name: "zl_defaultphoto", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_downArrow`.
    var zl_downArrow: RswiftResources.ImageResource { .init(name: "zl_downArrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_drawLine`.
    var zl_drawLine: RswiftResources.ImageResource { .init(name: "zl_drawLine", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_drawLine_selected`.
    var zl_drawLine_selected: RswiftResources.ImageResource { .init(name: "zl_drawLine_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_editImage_tag`.
    var zl_editImage_tag: RswiftResources.ImageResource { .init(name: "zl_editImage_tag", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_filter`.
    var zl_filter: RswiftResources.ImageResource { .init(name: "zl_filter", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_filter_selected`.
    var zl_filter_selected: RswiftResources.ImageResource { .init(name: "zl_filter_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_focus`.
    var zl_focus: RswiftResources.ImageResource { .init(name: "zl_focus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_ic_left`.
    var zl_ic_left: RswiftResources.ImageResource { .init(name: "zl_ic_left", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_ic_right`.
    var zl_ic_right: RswiftResources.ImageResource { .init(name: "zl_ic_right", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_imageSticker`.
    var zl_imageSticker: RswiftResources.ImageResource { .init(name: "zl_imageSticker", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_livePhoto`.
    var zl_livePhoto: RswiftResources.ImageResource { .init(name: "zl_livePhoto", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_mosaic`.
    var zl_mosaic: RswiftResources.ImageResource { .init(name: "zl_mosaic", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_mosaic_selected`.
    var zl_mosaic_selected: RswiftResources.ImageResource { .init(name: "zl_mosaic_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_navBack`.
    var zl_navBack: RswiftResources.ImageResource { .init(name: "zl_navBack", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_pauseButtonWhite`.
    var zl_pauseButtonWhite: RswiftResources.ImageResource { .init(name: "zl_pauseButtonWhite", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_playButtonWhite`.
    var zl_playButtonWhite: RswiftResources.ImageResource { .init(name: "zl_playButtonWhite", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_playVideo`.
    var zl_playVideo: RswiftResources.ImageResource { .init(name: "zl_playVideo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_retake`.
    var zl_retake: RswiftResources.ImageResource { .init(name: "zl_retake", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_revoke`.
    var zl_revoke: RswiftResources.ImageResource { .init(name: "zl_revoke", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_revoke_disable`.
    var zl_revoke_disable: RswiftResources.ImageResource { .init(name: "zl_revoke_disable", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_right`.
    var zl_right: RswiftResources.ImageResource { .init(name: "zl_right", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_rotateimage`.
    var zl_rotateimage: RswiftResources.ImageResource { .init(name: "zl_rotateimage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_shadow`.
    var zl_shadow: RswiftResources.ImageResource { .init(name: "zl_shadow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_takePhoto`.
    var zl_takePhoto: RswiftResources.ImageResource { .init(name: "zl_takePhoto", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_textSticker`.
    var zl_textSticker: RswiftResources.ImageResource { .init(name: "zl_textSticker", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_toggle_camera`.
    var zl_toggle_camera: RswiftResources.ImageResource { .init(name: "zl_toggle_camera", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_video`.
    var zl_video: RswiftResources.ImageResource { .init(name: "zl_video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `zl_videoLoadFailed`.
    var zl_videoLoadFailed: RswiftResources.ImageResource { .init(name: "zl_videoLoadFailed", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.entitlements` struct is generated, and contains static references to 1 properties.
  struct entitlements {
    let apsEnvironment: String = "development"
    let comAppleSecurityApplicationGroups = comAppleSecurityApplicationGroups()
    struct comAppleSecurityApplicationGroups {
      let groupComLxBl: String = "group.com.lx.bl"
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 48 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `EmptyArray.json`.
    var emptyArrayJson: RswiftResources.FileResource { .init(name: "EmptyArray", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `EmptyObject.json`.
    var emptyObjectJson: RswiftResources.FileResource { .init(name: "EmptyObject", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Events.json`.
    var eventsJson: RswiftResources.FileResource { .init(name: "Events", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `EventsOrganization.json`.
    var eventsOrganizationJson: RswiftResources.FileResource { .init(name: "EventsOrganization", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `EventsRepository.json`.
    var eventsRepositoryJson: RswiftResources.FileResource { .init(name: "EventsRepository", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `EventsUserPerformed.json`.
    var eventsUserPerformedJson: RswiftResources.FileResource { .init(name: "EventsUserPerformed", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `EventsUserReceived.json`.
    var eventsUserReceivedJson: RswiftResources.FileResource { .init(name: "EventsUserReceived", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Languages.json`.
    var languagesJson: RswiftResources.FileResource { .init(name: "Languages", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Notifications.json`.
    var notificationsJson: RswiftResources.FileResource { .init(name: "Notifications", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `NotificationsRepository.json`.
    var notificationsRepositoryJson: RswiftResources.FileResource { .init(name: "NotificationsRepository", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Organization.json`.
    var organizationJson: RswiftResources.FileResource { .init(name: "Organization", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Profile.json`.
    var profileJson: RswiftResources.FileResource { .init(name: "Profile", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Repository.graphql`.
    var repositoryGraphql: RswiftResources.FileResource { .init(name: "Repository", pathExtension: "graphql", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Repository.json`.
    var repositoryJson: RswiftResources.FileResource { .init(name: "Repository", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryBranch.json`.
    var repositoryBranchJson: RswiftResources.FileResource { .init(name: "RepositoryBranch", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryBranches.json`.
    var repositoryBranchesJson: RswiftResources.FileResource { .init(name: "RepositoryBranches", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryCommit.json`.
    var repositoryCommitJson: RswiftResources.FileResource { .init(name: "RepositoryCommit", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryCommits.json`.
    var repositoryCommitsJson: RswiftResources.FileResource { .init(name: "RepositoryCommits", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryContents.json`.
    var repositoryContentsJson: RswiftResources.FileResource { .init(name: "RepositoryContents", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryContributors.json`.
    var repositoryContributorsJson: RswiftResources.FileResource { .init(name: "RepositoryContributors", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryForks.json`.
    var repositoryForksJson: RswiftResources.FileResource { .init(name: "RepositoryForks", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryIssue.json`.
    var repositoryIssueJson: RswiftResources.FileResource { .init(name: "RepositoryIssue", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryIssueComments.json`.
    var repositoryIssueCommentsJson: RswiftResources.FileResource { .init(name: "RepositoryIssueComments", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryIssues.json`.
    var repositoryIssuesJson: RswiftResources.FileResource { .init(name: "RepositoryIssues", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryNumberOfLines.json`.
    var repositoryNumberOfLinesJson: RswiftResources.FileResource { .init(name: "RepositoryNumberOfLines", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryPullRequest.json`.
    var repositoryPullRequestJson: RswiftResources.FileResource { .init(name: "RepositoryPullRequest", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryPullRequestComments.json`.
    var repositoryPullRequestCommentsJson: RswiftResources.FileResource { .init(name: "RepositoryPullRequestComments", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryPullRequests.json`.
    var repositoryPullRequestsJson: RswiftResources.FileResource { .init(name: "RepositoryPullRequests", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryReadme.json`.
    var repositoryReadmeJson: RswiftResources.FileResource { .init(name: "RepositoryReadme", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryRelease.json`.
    var repositoryReleaseJson: RswiftResources.FileResource { .init(name: "RepositoryRelease", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryReleases.json`.
    var repositoryReleasesJson: RswiftResources.FileResource { .init(name: "RepositoryReleases", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositorySearch.json`.
    var repositorySearchJson: RswiftResources.FileResource { .init(name: "RepositorySearch", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryStargazers.json`.
    var repositoryStargazersJson: RswiftResources.FileResource { .init(name: "RepositoryStargazers", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryTrendings.json`.
    var repositoryTrendingsJson: RswiftResources.FileResource { .init(name: "RepositoryTrendings", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RepositoryWatchers.json`.
    var repositoryWatchersJson: RswiftResources.FileResource { .init(name: "RepositoryWatchers", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Search.graphql`.
    var searchGraphql: RswiftResources.FileResource { .init(name: "Search", pathExtension: "graphql", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `User.graphql`.
    var userGraphql: RswiftResources.FileResource { .init(name: "User", pathExtension: "graphql", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `User.json`.
    var userJson: RswiftResources.FileResource { .init(name: "User", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `UserFollowers.json`.
    var userFollowersJson: RswiftResources.FileResource { .init(name: "UserFollowers", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `UserFollowing.json`.
    var userFollowingJson: RswiftResources.FileResource { .init(name: "UserFollowing", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `UserRepositories.json`.
    var userRepositoriesJson: RswiftResources.FileResource { .init(name: "UserRepositories", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `UserRepositoriesStarred.json`.
    var userRepositoriesStarredJson: RswiftResources.FileResource { .init(name: "UserRepositoriesStarred", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `UserRepositoriesWatching.json`.
    var userRepositoriesWatchingJson: RswiftResources.FileResource { .init(name: "UserRepositoriesWatching", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `UserSearch.json`.
    var userSearchJson: RswiftResources.FileResource { .init(name: "UserSearch", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `UserTrendings.json`.
    var userTrendingsJson: RswiftResources.FileResource { .init(name: "UserTrendings", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `loading.gif`.
    var loadingGif: RswiftResources.FileResource { .init(name: "loading", pathExtension: "gif", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `photodata.bin`.
    var photodataBin: RswiftResources.FileResource { .init(name: "photodata", pathExtension: "bin", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `schema.json`.
    var schemaJson: RswiftResources.FileResource { .init(name: "schema", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 4 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `LaunchScreen`.
    var launchScreen: RswiftResources.NibReference<UIKit.UIView> { .init(name: "LaunchScreen", bundle: bundle) }

    /// Nib `LXMessageCell`.
    var lxMessageCell: RswiftResources.NibReference<LXMessageCell> { .init(name: "LXMessageCell", bundle: bundle) }

    /// Nib `LXMessageTestCell`.
    var lxMessageTestCell: RswiftResources.NibReference<LXMessageTestCell> { .init(name: "LXMessageTestCell", bundle: bundle) }

    /// Nib `LXStackTestVC`.
    var lxStackTestVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "LXStackTestVC", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "11", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named '11' is used in nib 'LXMessageCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "option", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'option' is used in nib 'LXMessageCell', but couldn't be loaded.") }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var main: main { .init(bundle: bundle) }

    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.main.validate()
    }


    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UINavigationController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}