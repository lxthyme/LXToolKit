inhibit_all_warnings!
use_frameworks!
use_modular_headers!
platform:ios, '13'

ENV['SWIFT_VERSION'] = '5'

install! 'cocoapods',
           disable_input_output_paths: true,
           generate_multiple_pod_projects: true,
           deterministic_uuids: false

target 'DJTest' do
  inherit! :search_paths

  pod 'DJObjcModule', :path => '../DJObjcModule'
  pod 'DJSwiftModule', :path => '../DJSwiftModule'
  pod 'LXToolKit', :path => '../LXToolKit'
  pod 'LXToolKitObjc', :path => '../LXToolKitObjC'
  pod 'DJBusinessModuleSwift', :path => '../../../BL.repo/DaoJia/DJBusinessModuleSwift'
	pod 'Masonry'
  pod 'Moya-ObjectMapper/RxSwift', :git => 'https://github.com/p-rob/Moya-ObjectMapper.git', :branch => 'master'  # https://github.com/ivanbruel/Moya-ObjectMapper
  # pod 'RxNetworks'#, :modular_headers => true

  pod 'YYText'
  pod 'MJRefresh'
  pod 'Action'
  pod 'YPImagePicker'
  pod 'GoogleMobileAds'
  pod 'FirebaseAnalytics'
  pod 'MJExtension'
  pod 'Mantle'
  pod 'FirebaseCrashlytics'
  pod 'ObjectMapper'
  pod 'R.swift'

end

avoid_warning_list = []
post_install do |installer|
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_configurations.each do |config|
        # print('>>>[2]: ', target, tconfig: , config, n)
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        # if avoid_warning_list.include?(target.name)
        #   config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'NO'
        #   config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'NO'
        # else
        #   config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
        #   config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'YES'
        # end
      end
    end
  end
end

# static_frameworks = ['DJBusinessModuleSwift', 'Toast-Swift', 'HandyJSON', 'Moya', 'RxSwift', 'Alamofire',
#   # 'FirebaseCrashlytics',
#   # 'FirebaseCore',
#   # 'GoogleUtilities', 'PromisesObjC',
#   # 'FirebaseCoreDiagnostics', 'GoogleDataTransport', 'nanopb',
#   # 'FirebaseCoreInternal',
#   # 'FirebaseInstallations',
#   ]
#   pre_install do |installer|
#     installer.pod_targets.each do |pod|
#       # 注意这里和上面的不同
#       if !static_frameworks.include?(pod.name)
#         def pod.static_framework?;
#           true
#         end
#         def pod.build_type;
#           Pod::BuildType.static_library
#         end
#       end
#     end
#   end
