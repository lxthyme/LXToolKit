source 'https://cdn.cocoapods.org'
# source 'https://gitlab.bl.com/iOS/BLRepositories.git'

$Flutter_disabled = false
$flutter_source_import = false
$Flutter_isDebug = false
$Flutter_isProfile = false
$Flutter_isRelease = false
$DaoJiaPath = '/Users/lxthyme/Desktop/Lucky/Work/BL/DaoJia'
$DaoJiaPathFixed = '/Users/lxthyme/Desktop/Lucky/Work/BL/DaoJia.fixed'

# $Flutter_disabled = true
# $flutter_source_import = true
# $Flutter_isDebug = true
# $Flutter_isProfile = true
$Flutter_isRelease = true

tips = ""
if $Flutter_disabled
  tips = 'disabled'
elsif $flutter_source_import
  tips = "源码编译"
elsif $Flutter_isDebug
  tips = "Debug"
elsif $Flutter_isProfile
  tips = "Profile"
else
  tips = "Release"
end
puts("-->当前模式: #{tips.red}")

# use_frameworks!
# use_frameworks! :linkage => :static
use_frameworks! :linkage => :dynamic
# use_modular_headers!
# , :linkage => :static
# , :linkage => :dynamic
# , :modular_headers => true
# , :modular_headers => flase
inhibit_all_warnings!
# :inhibit_warnings => false
ENV['SWIFT_VERSION'] = '5'
platform :ios, '14.0'
if $flutter_source_import
install! 'cocoapods',
          disable_input_output_paths: true,
          # generate_multiple_pod_projects: true,
          # integrate_targets: false,
          deterministic_uuids: false
else
  install! 'cocoapods',
          disable_input_output_paths: true,
          generate_multiple_pod_projects: true,
          # integrate_targets: false,
          deterministic_uuids: false
          # incremental_installation: true,
end

workspace 'DJTest.xcworkspace'
project 'DJTest.xcodeproj'

plugin 'cocoapods-pod-linkage'

# script_BuildVersionIncrement = <<-CMD
# # Type a script or drag a script file from your workspace to insert its path.
# cd "$SRCROOT/Configuration/Common"
# sh version.sh
# CMD

def pod_LXToolKit
  use_frameworks! :linkage => :dynamic

  pod 'R.swift', '~> 7.0'
  # pod 'DJObjcModule', :path => '../DJObjcModule'
  # pod 'DJSwiftModule', :path => '../DJSwiftModule'
  # pod 'DJBusinessModuleSwift', :path => '../DJBusinessModuleSwift'
  pod 'DJRSwiftResource', :inhibit_warnings => false, :path => '../DJRSwiftResource'
  pod 'DJTestKit', :inhibit_warnings => false, :path => '../DJTestKit'

  # pod 'LXSwiftUIKit', :inhibit_warnings => false, :path => '../LXSwiftUIKit'

  pod 'LXToolKit', :inhibit_warnings => false, :path => '../LXToolKit', :subspecs => ['Core', '3rd']
  pod 'LXToolKit_Example', :inhibit_warnings => false, :path => '../LXToolKit_Example'

  pod 'LXToolKitObjC', :inhibit_warnings => false, :path => '../LXToolKitObjC'
  pod 'LXToolKitObjC_Example', :inhibit_warnings => false, :path => '../LXToolKitObjC_Example'

  ############ FloatingPanel
  pod 'FloatingPanel_Maps', :path => '/Users/lxthyme/Desktop/Lucky/_lxthyme.franework/iOS.framework/__Modal/FloatingPanel/FloatingPanel_Maps.podspec'
  pod 'FloatingPanel_Maps-SwiftUI', :path => '/Users/lxthyme/Desktop/Lucky/_lxthyme.franework/iOS.framework/__Modal/FloatingPanel/FloatingPanel_Maps-SwiftUI.podspec'
  pod 'FloatingPanel_Samples', :path => '/Users/lxthyme/Desktop/Lucky/_lxthyme.franework/iOS.framework/__Modal/FloatingPanel/FloatingPanel_Samples.podspec'
  pod 'FloatingPanel_SamplesObjC', :path => '/Users/lxthyme/Desktop/Lucky/_lxthyme.franework/iOS.framework/__Modal/FloatingPanel/FloatingPanel_SamplesObjC.podspec'
  pod 'FloatingPanel_Stocks', :path => '/Users/lxthyme/Desktop/Lucky/_lxthyme.franework/iOS.framework/__Modal/FloatingPanel/FloatingPanel_Stocks.podspec'

  ############ RxNetworks
  # pod 'RxNetworks'#, '~>0.4'
  pod 'RxNetworks', :podspec => './'
  # pod 'CacheX', '1.0.1'
  pod 'CacheX', :podspec => './'#, :modular_headers => true
  pod 'RxNetworks_Ex', :path => '/Users/lxthyme/Desktop/Lucky/_lxthyme.franework/iOS.framework/__MVVM/RxNetworks/RxNetworks_Ex.podspec'

  ############ SwiftHub_Ex
  # pod 'SwiftHub_Ex', :path => '../3rd/SwiftHub_Ex/SwiftHub_Ex.podspec'
  # pod 'Moya-ObjectMapper/RxSwift', :git => 'https://github.com/p-rob/Moya-ObjectMapper.git', :branch => 'master'  # https://github.com/ivanbruel/Moya-ObjectMapper
  # pod 'ImageSlideshow/Kingfisher', :git => 'https://github.com/khoren93/ImageSlideshow.git', :branch => 'master'   # https://github.com/zvonicek/ImageSlideshow

end

def pod_flutter
  use_frameworks! :linkage => :dynamic
  ############ flutter_cookbook
  # print "-->configurations: #{configuration_env}"
  if $Flutter_disabled
  elsif $flutter_source_import
    $flutter_source_path="../flutter_cookbook"
    $FLUTTER_BUILD_MODE = 'release'
    flutter_application_path = $flutter_source_path
    load File.join(flutter_application_path, '.ios', 'Flutter', 'podhelper.rb')
    install_all_flutter_pods(flutter_application_path)

    pod 'LXFlutterKit/Source', :path => '../LXFlutterKit'
  elsif $Flutter_isDebug
    pod 'Flutter', :podspec => '../3rd/flutter_cookbook/Debug'
    pod 'FlutterSDK/Debug', :path => '../3rd'
    pod 'LXFlutterKit/Debug', :path => '../LXFlutterKit'
  elsif $Flutter_isProfile
    pod 'Flutter', :podspec => '../3rd/flutter_cookbook/Profile'
    pod 'FlutterSDK/Profile', :path => '../3rd'
    pod 'LXFlutterKit/Profile', :path => '../LXFlutterKit'
  else
    pod 'LXFlutterKit/Release', :path => '../LXFlutterKit'
    pod 'Flutter', :podspec => '../3rd/flutter_cookbook/Release'
    pod 'FlutterSDK/Release', :path => '../3rd'
    # pod 'Flutter', :podspec => '../3rd/gsy_app/Release'
    # pod 'GSYSDK/Release', :path => '../3rd'
  end
end

def pod_flutter_installer(installer)
  if $flutter_source_import
    flutter_post_install(installer) if defined?(flutter_post_install)
    installer.pods_project.targets.each do |target|
      puts("-->flutter target: #{target.name}")
      flutter_additional_ios_build_settings(target)
    end
    installer.generated_projects.each do |project|
      project.targets.each do |target|
        flutter_additional_ios_build_settings(target)
      end
    end
  end
end

def pod_DJ
  use_frameworks! :linkage => :static

  source 'https://gitlab.bl.com/iOS/BLRepositories.git'

  pod 'DJBusinessModule', :path => "#{$DaoJiaPath}/DJBusinessModule"
  pod 'BLCartService', :podspec => './'
  pod 'BLOrder', :podspec => './'
  pod 'BLMapModule', :podspec => './'
  pod 'DJBusinessTools', :path=>"#{$DaoJiaPath}/DJBusinessTools", :inhibit_warnings => false
  pod 'DJiOSAppImages', :path=>"#{$DaoJiaPath}/DJiOSAppImages", :inhibit_warnings => false
  pod 'DJGlobalStoreManager', :path=>"#{$DaoJiaPath}/DJGlobalStoreManager", :inhibit_warnings => false
  pod 'DJBusinessCategoryRouterCenter', :path => "#{$DaoJiaPath}/DJBusinessCategoryRouterCenter", :inhibit_warnings => false
  pod 'BLNetworking', :path => "#{$DaoJiaPath}/BLNetworking"
  pod 'BLRawAPIManager', :path => "#{$DaoJiaPath}/BLRawAPIManager"
  pod 'BLImage', :path => "#{$DaoJiaPath}/BLImage"
  pod 'IBLProgressHud', :path => "#{$DaoJiaPath}/IBLProgressHud"
  # pod 'BLCashier', :path => '$DaoJiaPath/BLCashier'
  # pod 'BLMapModule', :path => '/Users/lxthyme/Desktop/Lucky/Work/BL/DaoJia/BLMapModule', :inhibit_warnings => false
  pod 'BLShoppingCartModule'

  pod 'SDWebImage', '5.9.2'
  pod 'MWPhotoBrowser', :podspec => './'

  pod 'AvoidCrash'
  pod 'SensorsAnalyticsSDK', '4.0.1', :subspecs => ['Location','Base','Core']
  pod 'AMap3DMap-NO-IDFA', '9.7.0'
  pod 'AMapSearch-NO-IDFA', '9.5.0'
  pod 'AMapLocation-NO-IDFA', '2.10.0'
  # pod 'FirebaseAnalytics'
  # pod 'FirebaseCrashlytics'
  # pod 'MJRefresh', '3.1.12'
  # pod 'JXCategoryView', '1.3.12'
end

target 'DJTest' do
  inherit! :search_paths
  # workspace 'DJTest.xcworkspace'

  # script_phase :name => 'Automating Build Number Increments',
  # :shell_path => '/bin/sh',
  # :execution_position => :before_compile,
  # :script => script_BuildVersionIncrement

  pod_flutter()
  pod_LXToolKit()
  pod_DJ()


  # use_frameworks! :linkage => :dynamic
  # pod 'CocoaDebug', :configurations => ['Debug']
  # # pod 'Bugly'
  # # pod 'UMCommon'    # 必须集成
  # # pod 'UMDevice'    # 必须集成
  # # pod 'UMAPM'   # 必选，APM组件，原错误分析升级为独立产品U-APM

  # pod 'YYCache', :git => 'git@github.com:ibireme/YYCache.git'
  # pod 'MBProgressHUD', :git => 'git@github.com:jdg/MBProgressHUD.git'
  # pod 'RxSwiftExt', '~> 6.2'
  # pod 'RxSwiftExt', :git => 'git@github.com:RxSwiftCommunity/RxSwiftExt.git', :tag => '6.2.0'

  # pod 'MJRefresh', '3.1.12'#, :modular_headers => true
  # pod 'JXCategoryView', '1.3.12'#, :modular_headers => true
  # pod 'YYModel'#, :modular_headers => true
  # pod 'Masonry'#, :modular_headers => true

    # pod 'SDWebImage'
    pod 'DZNEmptyDataSet'
    pod 'SVProgressHUD'
    pod 'RxSwiftExt', '~> 6.2'
    # pod 'ObjectMapper', '~>4.2'
    pod 'Moya-ObjectMapper/RxSwift', :git => 'https://github.com/p-rob/Moya-ObjectMapper.git', :branch => 'master'
    # pod 'SDWebImage', :git => 'git@github.com:SDWebImage/SDWebImage.git'

    # CHTCollectionViewWaterfallLayout
    # UICollectionViewLeftAlignedLayout
    # UIApplication.shared.keyWindow
end

post_install do |installer|
  pod_flutter_installer(installer)

  project_deployment_version = installer.pods_project.build_configurations.first.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
  # installer.pods_project.targets.each do |target|
  #   puts(">>>[1]: #{target.name.red}")
  #   puts(">>>[1]:  #{target}	#{target.build_configurations}")
  #   target.build_configurations.each do |config|
  #     generateConfig(target, config, project_deployment_version)
  #   end
  # end
  idx=0
  installer.generated_projects.each do |project|
    # puts(">>>project.build_configurations.first.build_settings: #{project.build_configurations.first.build_settings}")
    project.targets.each do |target|
      idx+=1
      # puts(">>>[2-#{idx}]:  #{target.name.red}")
      # puts(">>>[2-#{idx}]:  #{target}	#{target.build_configurations}")
      target.build_configurations.each do |config|
        generateConfig(target, config, project_deployment_version)
      end
      if target.name == 'LXToolKit' ||
        # target.name == 'RxCocoa' ||
        target.name == 'RxSwift'
        target.build_configurations.each do |config|
          if config.name == 'Debug'
              config.build_settings['OTHER_SWIFT_FLAGS'] ||= ['-D', 'TRACE_RESOURCES']
              puts("+++config.build_settings: #{config.build_settings}")
          end
        end
      end
       # elsif target.name == 'LXSwiftUIKit'
       #   target.build_configurations.each do |config|
       #     config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
       #     config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
       #   end
       # else
       #   target.build_configurations.each do |config|
       #     config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
       #     config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
       #   end
       # end
    end
    # project.build_configurations.each do |bc|
    #   puts(">>>[3]: #{bc}")
    #   # generateConfig(target, bc)
    # end
  end
end

# allow_warning_list = []
$sandbox_list = [
  'tingyunApp',
  'GoogleAppMeasurement',
  'FirebaseAnalytics',
  'Flutter',
  'FlutterSDK',
  'GSYSDK',
  'DJRSwiftResource',
  'LXToolKit',
  'LXToolKit_Example',
  'LXToolKitObjC',
  'LXToolKitObjC_Example',
]
$static_objc_list = [
  'DJRSwiftResource',
  'LXToolKit',
  'LXToolKit_Example',
  'LXToolKitObjC',
  'LXToolKitObjC_Example',
  #
  'CHTCollectionViewWaterfallLayout',
  'CocoaDebug',
  'CocoaLumberjack',
  'Colours',
  'DZNEmptyDataSet',
  'FirebaseCore',
  'FirebaseCoreExtension',
  'FirebaseCrashlytics',
  'FirebaseInstallations',
  # 'FirebaseSessions',
  'GoogleDataTransport',
  'GoogleUtilities',
  'HMSegmentedControl',
  'IGListDiffKit',
  'JXCategoryView',
  'JXPagingView',
  'KafkaRefresh',
  'Mantle',
  'Masonry',
  'MBProgressHUD',
  'MJExtension',
  'MJRefresh',
  'pop',
  'PromisesObjC',
  'ReactiveCocoa',
  'RxCocoa',
  'SDWebImage',
  'SVProgressHUD',
  'YYModel',
]
def generateConfig(target, config, project_deployment_version)
  # puts("  -->#{target.name} #{config}:".blue)
  fix_deployment_target(target, config, project_deployment_version)
  fix_deployment_team(config)
  # config.build_settings['HEADER_SEARCH_PATHS'] = '$\(inherited)'
  # config.build_settings['ALWAYS_SEARCH_USER_PATHS'] = 'YES'
  # config.build_settings['USER_HEADER_SEARCH_PATHS'] = '$\(inherited)'
  # if allow_warning_list.include?(target.name)
  #   config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
  #   config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'YES'
  #   config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
  # else
  #   config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'NO'
  #   config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'NO'
  #   config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'NO'
  # end
  xcconfig_path = config.base_configuration_reference.real_path
  xcconfig = File.read(xcconfig_path)
  xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
  File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
  config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
  config.build_settings['CODE_SIGN_IDENTITY'] = ''
  # config.build_settings['MODULE_VERIFIER_SUPPORTED_LANGUAGES'] = "objective-c objective-c++";
	# config.build_settings['MODULE_VERIFIER_SUPPORTED_LANGUAGE_STANDARDS'] = "gnu11 gnu++14";
  if !$sandbox_list.include?(target.name)
    config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'YES'
  elsif !$static_objc_list.include?(target.name)
    config.build_settings['ENABLE_MODULE_VERIFIER'] = 'NO'
  end
  # config.build_settings['ENABLE_MODULE_VERIFIER'] = 'NO'
end

$daojia_list = [
  'AFNetworking','AMap3DMap-NO-IDFA','AMapFoundation-NO-IDFA','AMapLocation-NO-IDFA','AMapSearch-NO-IDFA','AmapAPIManager','Aspects','AvoidCrash','BLAPIManagers','BLAPPInfoModule','BLAddressCRUD','BLAdvertResourceJumpManager','BLAreaManager','BLAutoScrollBannerHeaderView','BLBusinessCategoryAMapAPI','BLBusinessCategoryAddress','BLBusinessCategoryAdvertResource','BLBusinessCategoryBLStore','BLBusinessCategoryCheckRedCardInfo','BLBusinessCategoryCloudStore','BLBusinessCategoryCoupon','BLBusinessCategoryPagemanager','BLBusinessCategoryResourceRecorder','BLBusinessCategoryRouterCenter','BLBusinessCategorySensor','BLBusinessCategoryWebViewControllers','BLBusinessContext','BLCancelOrderView','BLCartService','BLCategories','BLCheckRedCardInfo','BLCollectionViewHeaderLayout','BLCountDownTool','BLCoupon','BLCouponCenterModule','BLCouponCommonComponents','BLDaoJiaAlertView','BLDragView','BLHomeDataSource','BLHomePageViewComponents','BLHorScrollGoodsDetailCell','BLImage','BLKeychainManager','BLLog','BLLoginRegister','BLMapModule','BLMediator','BLNetworking','BLNetworkingCategory','BLOrder','BLOrderConfirmBottomView','BLOrderConfirmCouponActionSheet','BLOrderConfirmNormalActionSheet','BLOrderConfirmRuleAlertView','BLOrderConfirmTableViewCells','BLOrderConfirmTableViewHeaderFooterViews','BLOrderUnavailableGoodsPopView','BLPagerListView','BLPagerView','BLPanicBuyEveryDay','BLPanicBuyViewComponents','BLPayCode','BLPaySuccessful','BLPopDownMenu','BLProtocolManager','BLRangeSlider','BLRawAPIManager','BLRealNameInformation','BLRefresh','BLSafeFetchDataFunctions','BLSearchBarContext','BLSecurePasswordAlertView','BLSecurePasswordView','BLSelectAddressViewController','BLSensorTrack','BLShare','BLShuMeiRisk','BLTabbar','BLTwoBallRotationView','BLUITools','BLViewDownloadsInvoice','BLWeChatSDK','BLWebViewControllers','BLiOSAppImages','CRRouter','CTAppContext','CTAppContext_BaiLian','CTHandyCategories','CTMediator','CTPersistance','CTVideoPlayerView','CTWKWebView','CTWebViewComponents','CTWebviewTarget','DACircularProgress','DJBusinessCategoryRouterCenter','DJBusinessModule','DJBusinessTools','DJGlobalStoreManager','DJiOSAppImages','FXBlurView','HTHorizontalSelectionList','HWPanModal','HandyFrame','IBLAddressSelectPickerView','IBLNavigationBar','IBLOrderConfirmAlertView','IBLPopDownMenu','IBLProgressHud','IBLTitleScrollView','IBLToastView','IQKeyboardManager','JSONKit','JhtMarquee','LinkedME_LinkAccount','M13BadgeView','MMPopupView','MWPhotoBrowser','RisoAppContext','SDCycleScrollView','SQLCipher','SensorsAnalyticsSDK','Toast','VerticalAlignmentLabel','WechatOpenSDK','YYCache','YYImage','YYWebImage','iCarousel',
]
def fix_deployment_target(target, config, project_deployment_version)
  # old_version = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
  # new_version = project_deployment_version
  # if old_version.to_f < new_version.to_f
  #   puts "    #{config.name}: #{old_version.yellow} -> #{new_version.green}"
  #   config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = new_version
  #   # project.build_configurations.each do |bc|
  #   #   bc.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = new_version
  #   # end
  # end
  if $daojia_list.include?(target.name)
    config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
  else
    config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
  end
  # config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
  # if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f < 9.0
  #   config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
  # end
end

def fix_deployment_team(config)
  # config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
  # config.build_settings['VALID_ARCHS'] = '$(ARCHS_STANDARD) x86_64-apple-ios-simulator'
  # puts("VALID_ARCHS[2]: #{config.build_settings['VALID_ARCHS']}")
  config.build_settings['ENABLE_BITCODE'] = 'NO'
  # config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64 x86_64'
  config.build_settings['CODE_SIGN_STYLE'] = 'Automatic'
  config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
  # config.build_settings['DEVELOPMENT_TEAM'] = '6C6JHMW46K'
  # Apple Distribution
  # config.build_settings['CODE_SIGN_IDENTITY'] = 'iPhone Developer'
end

# post_install do |installer|
  # fix xcode 15 TOOLCHAIN_DIR - remove after fix oficially - https://github.com/CocoaPods/CocoaPods/issues/12065
  # installer.aggregate_targets.each do |target|
  #     target.xcconfigs.each do |variant, xcconfig|
  #     xcconfig_path = target.client_root + target.xcconfig_relative_path(variant)
  #     IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
  #     end
  # end

  # installer.pods_project.targets.each do |target|
  #   target.build_configurations.each do |config|
  #     if config.base_configuration_reference.is_a? Xcodeproj::Project::Object::PBXFileReference
  #         xcconfig_path = config.base_configuration_reference.real_path
  #         IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
  #     end
  #   end
  # end

#   installer.generated_projects.each do |project|
#     project.targets.each do |target|
#       target.build_configurations.each do |config|
#         xcconfig_path = config.base_configuration_reference.real_path
#         xcconfig = File.read(xcconfig_path)
#         xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
#         File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
#       end
#     end
#   end
# end

pre_install do |installer|
  # workaround for https://github.com/CocoaPods/CocoaPods/issues/3289
	Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
end

static_frameworks = [
'DJRSwiftResource', 'FloatingPanel_Maps', 'FloatingPanel_Maps-SwiftUI', 'FloatingPanel_Samples', 'FloatingPanel_SamplesObjC', 'FloatingPanel_Stocks', 'DJTestKit', 'LXFlutterKit', 'LXToolKit', 'LXToolKit_Example', 'RxNetworks_Ex',
'LXToolKitObjC', 'LXToolKitObjC_Example', 'IGListKit', 'UICollectionViewLeftAlignedLayout',
'IGListDiffKit',
'SnapKit', 'CryptoSwift', 'SDWebImage', 'CocoaLumberjack', 'SwifterSwift', 'Hero', 'DZNEmptyDataSet', 'R.swift', 'Localize-Swift', 'SVProgressHUD',
'Firebase', 'FirebaseAnalytics', 'FirebaseCore', 'FirebaseABTesting', 'GoogleUtilities', 'PromisesObjC', 'FirebaseCoreInternal', 'FirebaseInstallations', 'nanopb', 'GoogleAppMeasurement', 'FirebaseCrashlytics', 'FirebaseSessions', 'FirebaseCoreExtension', 'GoogleDataTransport', 'PromisesSwift', 'HMSegmentedControl', 'ImageSlideshow', 'KafkaRefresh', 'Kingfisher', 'ObjectMapper', 'RxCocoa', 'RxRelay', 'RxGesture', 'RxOptional', 'NSObject+Rx', 'RxTheme', 'RxDataSources', 'Differentiator',
'RxSwift','Moya-ObjectMapper', 'Alamofire', 'Moya', 'HandyJSON',
'Toast-Swift', 'RxSwiftExt',
'Mantle', 'MJExtension', 'YYText', 'Action', 'YPImagePicker', 'SteviaLayout', 'PryntTrimmerView', 'MJRefresh', 'Mixpanel-swift', 'Apollo', 'KeychainAccess', 'MessageKit', 'InputBarAccessoryView', 'IQKeyboardManagerSwift', 'RxViewController', 'SwiftDate', 'DateToolsSwift', 'DropDown', 'WhatsNewKit', 'RAMAnimatedTabBarController', 'BonMot', 'RxNetworks', 'lottie-ios', 'CacheX', 'AlamofireImage', 'FloatingPanel', 'Presentr',
'Masonry', 'MBProgressHUD',
'ReactiveCocoa', 'YYModel', 'Colours', 'JXCategoryView', 'pop', 'CHTCollectionViewWaterfallLayout', 'JXPagingView',
]
pre_install do |installer|
  installer.pod_targets.each do |pod|
    # 注意这里和上面的不同
    if $daojia_list.include?(pod.name) || !static_frameworks.include?(pod.name)
    #   def pod.static_framework?;
    #     true
    #   end
    #   def pod.build_type;
    #     Pod::BuildType.static_library
    #   end
    # else
    # elsif !static_frameworks.include?(pod.name)
    # if !static_frameworks.include?(pod.name)
      def pod.static_framework?;
        true
      end
      def pod.build_type;
        Pod::BuildType.static_library
      end
    end
  end
end
