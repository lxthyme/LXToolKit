source 'https://cdn.cocoapods.org'
# source 'https://gitlab.bl.com/iOS/BLRepositories.git'

use_frameworks!
# use_modular_headers!
inhibit_all_warnings!
ENV['SWIFT_VERSION'] = '5'
platform :ios, '13.0'
install! 'cocoapods',
           disable_input_output_paths: true,
           generate_multiple_pod_projects: true,
           # integrate_targets: false,
           deterministic_uuids: false

target 'DJTest' do
  inherit! :search_paths

  # pod 'DJObjcModule', :path => '../DJObjcModule'
  # pod 'DJSwiftModule', :path => '../DJSwiftModule'
  # pod 'LXToolKit', :path => '../LXToolKit'
  # pod 'LXToolKitObjC', :path => '../LXToolKitObjC'
  # pod 'DJBusinessModuleSwift', :path => '../../../BL.repo/DaoJia/DJBusinessModuleSwift'
	# pod 'Masonry'
  # pod 'Moya-ObjectMapper/RxSwift', :git => 'https://github.com/p-rob/Moya-ObjectMapper.git', :branch => 'master'  # https://github.com/ivanbruel/Moya-ObjectMapper
  # pod 'RxNetworks'#, :modular_headers => true

  # pod 'YYText'
  # pod 'MJRefresh'
  # pod 'Action'
  # pod 'YPImagePicker'
  # pod 'GoogleMobileAds'
  # pod 'FirebaseAnalytics'
  # pod 'MJExtension'
  # pod 'Mantle'
  # pod 'FirebaseCrashlytics'
  # pod 'ObjectMapper'
  pod 'R.swift', '~> 7.0'
  # pod 'DJObjcModule', :path => '../DJObjcModule'
  # pod 'DJSwiftModule', :path => '../DJSwiftModule'
  # pod 'DJRSwiftTest', :path => '../DJRSwiftTest'
  # pod 'DJBusinessModuleSwift', :path => '../DJBusinessModuleSwift'
  pod 'DJRSwiftResource', :path => '../DJRSwiftResource'

  # pod 'LXSwiftUIKit', :path => '../LXSwiftUIKit'

  pod 'LXToolKit_Example', :path => '../LXToolKit_Example'
  pod 'LXToolKitObjC_Example', :path => '../LXToolKitObjC_Example'

  pod 'LXToolKit', :path => '../LXToolKit'
  pod 'LXToolKitObjC', :path => '../LXToolKitObjC'
  pod 'DJTestKit', :path => '../DJTestKit'

  pod 'Moya-ObjectMapper/RxSwift', :git => 'https://github.com/p-rob/Moya-ObjectMapper.git', :branch => 'master'
  pod 'CocoaDebug', :configurations => ['Debug']
  # pod 'Bugly'
  # pod 'UMCommon'    # 必须集成
  # pod 'UMDevice'    # 必须集成
  # pod 'UMAPM'   # 必选，APM组件，原错误分析升级为独立产品U-APM

  # RxNetworks
  # pod 'YYCache', :git => 'git@github.com:ibireme/YYCache.git'
  # pod 'MBProgressHUD', :git => 'git@github.com:jdg/MBProgressHUD.git'
  #pod 'RxNetworks', '~>0.4'
  pod 'RxSwiftExt', '~> 6.2'
  # pod 'RxSwiftExt', :git => 'git@github.com:RxSwiftCommunity/RxSwiftExt.git', :tag => '6.2.0'
  pod 'RxNetworks', '0.4.4'


  # pod 'BLMapModule', :path => '/Users/lxthyme/Desktop/Lucky/Work/BL/DaoJia/BLMapModule', :inhibit_warnings => false
  # pod 'AMap3DMap-NO-IDFA','9.6.0'
  # pod 'AMapSearch-NO-IDFA','9.5.0'
  # pod 'AMapLocation-NO-IDFA', '2.10.0'
  # pod 'AMap3DMap-NO-IDFA'
  # pod 'AMapSearch-NO-IDFA'
  # pod 'AMapLocation-NO-IDFA'
  # pod 'FirebaseAnalytics'
  # pod 'FirebaseCrashlytics'

end

post_install do |installer|
  # installer.pods_project.targets.each do |target|
  #   puts(">>>[1]: #{target}")
  #   target.build_configurations.each do |config|
  #     generateConfig(target, config)
  #   end
  # end
  idx=1
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      # puts(">>>[#{idx}]:  #{target}")
      idx+=1
      # puts(">>>[2.1]:  #{target}\t#{target.build_configurations}")
      target.build_configurations.each do |config|
        generateConfig(target, config)
      end
      if target.name == 'RxSwift'
        target.build_configurations.each do |config|
           if config.name == 'Debug'
              config.build_settings['OTHER_SWIFT_FLAGS'] ||= ['-D', 'TRACE_RESOURCES']
           end
        end
       end
       # elsif target.name == 'LXSwiftUIKit'
       #   target.build_configurations.each do |config|
       #     config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
       #     config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
       #   end
       # else
       #   target.build_configurations.each do |config|
       #     config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
       #     config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
       #   end
       # end
    end
    # project.build_configurations.each do |bc|
    #   puts(">>>[3]: #{bc}")
    #   # generateConfig(target, bc)
    # end
  end
end

allow_warning_list = []
def generateConfig(target, config)
  # puts("  -->#{target} #{config}:")
  config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
  # if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f < 9.0
  #   config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
  # end
  # config.build_settings['VALID_ARCHS'] = 'x86_64 armv7 arm64'
  # puts("VALID_ARCHS[2]: #{config.build_settings['VALID_ARCHS']}")
  config.build_settings['ENABLE_BITCODE'] = 'NO'
  # config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64 x86_64"
  config.build_settings['CODE_SIGN_STYLE'] = 'Automatic'
  config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
  # config.build_settings['DEVELOPMENT_TEAM'] = '6C6JHMW46K'
  # Apple Distribution
  # config.build_settings['CODE_SIGN_IDENTITY'] = 'iPhone Developer'
  # config.build_settings['HEADER_SEARCH_PATHS'] = '$(inherited)'
  # config.build_settings['ALWAYS_SEARCH_USER_PATHS'] = 'YES'
  # config.build_settings['USER_HEADER_SEARCH_PATHS'] = '$(inherited)'
  # if allow_warning_list.include?(target.name)
  #   config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
  #   config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'YES'
  # else
  #   config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'NO'
  #   config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'NO'
  # end
  xcconfig_path = config.base_configuration_reference.real_path
  xcconfig = File.read(xcconfig_path)
  xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
  File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
end

# post_install do |installer|
  # fix xcode 15 TOOLCHAIN_DIR - remove after fix oficially - https://github.com/CocoaPods/CocoaPods/issues/12065
  # installer.aggregate_targets.each do |target|
  #     target.xcconfigs.each do |variant, xcconfig|
  #     xcconfig_path = target.client_root + target.xcconfig_relative_path(variant)
  #     IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
  #     end
  # end

  # installer.pods_project.targets.each do |target|
  #   target.build_configurations.each do |config|
  #     if config.base_configuration_reference.is_a? Xcodeproj::Project::Object::PBXFileReference
  #         xcconfig_path = config.base_configuration_reference.real_path
  #         IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
  #     end
  #   end
  # end

#   installer.generated_projects.each do |project|
#     project.targets.each do |target|
#       target.build_configurations.each do |config|
#         config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.1'
#         xcconfig_path = config.base_configuration_reference.real_path
#         xcconfig = File.read(xcconfig_path)
#         xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
#         File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
#       end
#     end
#   end
# end

# static_frameworks = [
# # 'DJBusinessModuleSwift',
# 'RxNetworks',
# # 'Toast-Swift', 'HandyJSON', 'Moya', 'RxSwift', 'Alamofire',
# # 'FirebaseCrashlytics',
# # 'FirebaseCore',
# # 'GoogleUtilities', 'PromisesObjC',
# # 'FirebaseCoreDiagnostics', 'GoogleDataTransport', 'nanopb',
# # 'FirebaseCoreInternal',
# # 'FirebaseInstallations',
# ]
# pre_install do |installer|
#   installer.pod_targets.each do |pod|
#     # 注意这里和上面的不同
#     if !static_frameworks.include?(pod.name)
#       def pod.static_framework?;
#         true
#       end
#       def pod.build_type;
#         Pod::BuildType.static_library
#       end
#     end
#   end
# end

pre_install do |installer|
  # workaround for https://github.com/CocoaPods/CocoaPods/issues/3289
	Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
end
